#!/bin/bash
examples_folder="$PWD/examples/c_files/"
python_interpretor="python"
main_module="$PWD/ctc-translation/translation.py"
output_extension=".sync"
results_dir="$PWD/results"

verifast_path="../verifast/bin/verifast"
verifast_run="./$verifast_path"

export PYTHONPATH="$PYTHONPATH:$PWD"

if [ $# == 0 ]; then
	echo "./run-translation [option] /path/to/file"
elif [ $# == 1 ]; then
	if [ $1 == "-allExamples" ]; then
		for entry in $examples_folder*;
		do
			if [ -f $entry ]; then
				if [[ ! -e $results_dir ]]; then
					mkdir $results_dir
				fi

				call_verifast="$verifast_run $entry"
				call_tool="$python_interpretor $main_module $entry"

				entry=${entry//$examples_folder}
				echo "Running algorithm on file: $entry"
				entry=${entry//".c"/}

				output="$results_dir/$entry$output_extension"

				$call_verifast
			    	$call_tool > $output
				
			    	echo $'Done.\n'
			fi
		done
	else
		output_file=$(basename $1)
		echo "Running algorithm on file: $output_file"
		output_file=${output_file//".c"/}
		output_file="$PWD/$output_file$output_extension"
		call_tool="$python_interpretor $main_module $1"
	    	$call_tool > $output_file
	    	echo "Done."
	fi

elif [ $# == 2 ]; then
	if [[ $1 == "-allExamples" && $2 == "-disableVerifast" ]] || 
		[[ $1 == "-disableVerifast" && $2 == "-allExamples" ]]; then
		for entry in $examples_folder*;
		do
			if [ -f $entry ]; then

				if [[ ! -e $results_dir ]]; then
					mkdir $results_dir
				fi

				call_tool="$python_interpretor $main_module $entry"
				entry=${entry//$examples_folder}
				echo "Running algorithm on file: $entry"
				entry=${entry//".c"/}
				output="$results_dir/$entry$output_extension"
			    	$call_tool > $output
			    	echo $'Done.\n'
			fi
		done

	elif [ $1 == "-disableVerifast" ]; then
		output_file=$(basename $2)
		echo "Running algorithm on file: $output_file"
		output_file=${output_file//".c"/}
		output_file="$PWD/$output_file$output_extension"
		call_tool="$python_interpretor $main_module $2"
	    	$call_tool > $output_file
	   	echo "Done."
	fi

fi


